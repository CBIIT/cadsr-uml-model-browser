<!DOCTYPE project>
<!--
  CDEBrowser Ant build 
  =============================================

  Author: Shaji Kakkodi
  @version $Id: build.xml,v 1.27 2006-11-28 21:06:48 jiangj Exp $

  This build script was created using Ant version 1.6 and Java 1.5
-->

<project name="umlmodelbrowser" default="init" basedir=".">
  
  <!-- Project Settings -->
  <!-- Use your own build.properties 
       Properties in build.properties overide properties in build.xml
       -->
  <property file="build.properties"/>
  
   <!-- Make sure these are correct for your instance C:\jboss-4.0.2-->
   
   <property name="jboss.home" value="C:\jboss-4.0.4.GA" /> 
   <property name="jboss.start.script.name" value="run.bat" />
   <property name="jboss.start.debug.script.name" value="rundebug.bat" />
   <property name="jboss.stop.script.name" value="shutdown.bat" />
   
   <property name="cdebrowser.version" value="3.2" />
   <property name="umlmodelbrowser.version" value="3.2" />
   <property name="umlmodelbrowser.build" value="5" />
   
   <!-- used for open source build for file suffix-->
   <property name="umlmodelbrowser.version.suffix" value="0_5" />
   
   <property name="dev.user.password" value="cdeuser" />
   <property name="qa.user.password" value="cdeuser" />
   <property name="stage.user.password" value="cdeuser" />
   <property name="prod.user.password" value="cdeuser" />

  
  
  
  <property name="project.home" value="${basedir}"/>
  
  <property name="app.name" value="umlmodelbrowser" />
  <property name="web.app.name" value="${app.name}-web" />
  <property name="war.name" value="${app.name}" />

    
  <!-- Java Source Directories -->
  <property name="java.src.dir" value="${project.home}/src/java"/>
    
  <!-- ui Directories -->
  <property name="ui.dir" value="${project.home}/ui"/>  
  <property name="jsp.dir" value="${ui.dir}/jsp"/>  
  <property name="html.dir" value="${ui.dir}/html"/>    
  <property name="build.dir" value="${project.home}/build"/>
  <property name="dist.dir" value="${project.home}/dist"/>
  <property name="classes.build.dir" value="${build.dir}/classes"/>
  <property name="run.java.lib.dir" value="${project.home}/lib/java/run"/>
  <property name="compile.java.lib.dir" value="${project.home}/lib/java/compile"/>
 
  <property name="config.home" value="${project.home}/config"/>
  <property name="config.qa" value="${project.home}/config_qa"/>
  <property name="config.stage" value="${project.home}/config_stage"/>  
  <property name="config.prod" value="${project.home}/config_prod"/>
  <property name="config.opensource" value="${project.home}/config_opensource"/>
  <property name="ejb.descriptor.home" value="${project.home}/config/ejb"/>
  
  <property name="web.descriptor.home" value="${project.home}/config/WEB-INF"/>  
  
  <property name="app.docs.dir" value="${project.home}/docs" /> 
  
  <property name="umlmodelbrowser.docs.setup.dir" value="${project.home}/docs/setup" />  
  
  <property name="build.docs.setup.dir" value="${build.dir}/docs" />  
  
  <property name="open.source.file.name.windows" value="UMLModelBrowser_Windows_src_${umlmodelbrowser.version.suffix}" />
  <property name="open.source.file.name.unix" value="UMLModelBrowser_Unix_src_${umlmodelbrowser.version.suffix}" />  
  
    <!-- Open source directoris -->
  <property name="umlbrowser.docs.setup.dir" value="${project.home}/docs/setup" />  
  <property name="open.source.dir" value="${build.dir}/opensource" />  
  <property name="open.source.dir.raw" value="${open.source.dir}/raw" />
  <property name="open.source.dir.raw.config" value="${open.source.dir.raw}/config" />
  <property name="open.source.dir.raw.lib" value="${open.source.dir.raw}/lib/java" />
  <property name="open.source.dir.raw.src" value="${open.source.dir.raw}/src/java" />
  <property name="open.source.dir.raw.ui" value="${open.source.dir.raw}/ui" />
  <property name="app.docs.setup.distribution.src.readme.name" value="UmlModelBrowserDistributionReadme" /> 
  <property name="open.source.readme.name" value="source_readme" /> 
  
  <!-- base dir in the zip file -->
  <property name="open.source.dir.base.name" value="umlmodelbrowser_${umlmodelbrowser.version.suffix}" />    


  
   
  

  <!-- =========== CLEAN BUILD AREA ======================= -->
    
    <target name="clean">
          <delete dir="${classes.build.dir}" quiet="false"/>
          <delete dir="${build.dir}" quiet="false"/>   
          <delete dir="${dist.dir}" quiet="false"/>          
    </target>
    
    <target name="clean_build_dir">
          <delete dir="${classes.build.dir}" quiet="false"/>
          <delete dir="${build.dir}" quiet="false"/>           
    </target>
 <!-- =========== END CLEAN BUILD AREA ======================= -->
 
 
 <!-- =========== CONFIGURATION ======================= -->
   <!-- Initialize the system -->
   
 
   <target name="init">
     <!-- Create build dir -->
     <!-- Create time stamp -->
     <tstamp/>
     <mkdir dir="${build.dir}"/>
     <mkdir dir="${classes.build.dir}"/>
     <mkdir dir="${dist.dir}"/>
   </target>
   <!-- end init -->
 <!-- =========== END CONFIGURATION ======================= -->


   <!--Set the lib classpath-->
   <path id="classpath">
    <fileset dir="${run.java.lib.dir}">
      <include name="*.jar"/>
      <include name="*.zip"/>
    </fileset>

    <fileset dir="${compile.java.lib.dir}">
      <include name="*.jar"/>
      <include name="*.zip"/>    
    </fileset>
    
   </path>
   
   <path id="srcpath">
         <pathelement location="${java.src.dir}"/>
   </path>
   
   <target name="compile" depends="init">
      <javac destdir="${classes.build.dir}" debug="on" >
         <classpath refid="classpath"/>
         <src refid="srcpath"/>
      </javac>  
            
   </target>
   
  
  
  <!-- =========== DEV CONFIG ======================= -->
    <target name="dev_config" depends="init">          
     <copy todir="${classes.build.dir}/WEB-INF/classes">
         <fileset dir="${config.home}/properties">
           <patternset>
             <include name="*.properties"/>
           </patternset>
         </fileset>
       </copy>
         
     <filter token="umlmodelbrowser.version" value="${umlmodelbrowser.version}"/>
     <filter token="umlmodelbrowser.build" value="${umlmodelbrowser.build}" />
     <copy todir="${classes.build.dir}/jsp/common" filtering="true">
              <fileset dir="${jsp.dir}/common">
                <patternset>
                  <include name="common_bottom_border.jsp"/>
                </patternset>
              </fileset>
     </copy> 
     
     <filter token="user.password" value="${dev.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" filtering="true">
               <fileset dir="${config.home}/connections">
     	      <patternset>
     	         <include name="oracle-ds.xml"/>
     	      </patternset>
               </fileset>
     </copy>
     
       <property name="debug.config.home" value="${config.home}" /> 
        
   </target>
  <!-- =========== END DEV CONFIG ======================= -->
  
  <!-- =========== QA CONFIG ======================= -->
    <target name="qa_config" depends="init">          
     <copy todir="${classes.build.dir}/WEB-INF/classes">
         <fileset dir="${config.qa}/properties">
           <patternset>
             <include name="*.properties"/>
           </patternset>
         </fileset>
       </copy>
         
     <filter token="umlmodelbrowser.version" value="${umlmodelbrowser.version}"/>
     <filter token="umlmodelbrowser.build" value="${umlmodelbrowser.build}" />
     <copy todir="${classes.build.dir}/jsp/common" filtering="true">
              <fileset dir="${jsp.dir}/common">
                <patternset>
                  <include name="common_bottom_border.jsp"/>
                </patternset>
              </fileset>
     </copy> 
     
     <filter token="user.password" value="${qa.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" filtering="true">
          <fileset dir="${config.qa}/connections">
	      <patternset>
	         <include name="oracle-ds.xml"/>
	      </patternset>
          </fileset>
     </copy>          
     
       <property name="debug.config.home" value="${config.qa}" /> 
        
   </target>
  <!-- =========== END QA CONFIG ======================= -->

  <!-- =========== STAGE CONFIG ======================= -->
    <target name="stage_config" depends="init">          
     <copy todir="${classes.build.dir}/WEB-INF/classes">
         <fileset dir="${config.stage}/properties">
           <patternset>
             <include name="*.properties"/>
           </patternset>
         </fileset>
       </copy>
         
     <filter token="umlmodelbrowser.version" value="${umlmodelbrowser.version}"/>
     <filter token="umlmodelbrowser.build" value="${umlmodelbrowser.build}" />
     <copy todir="${classes.build.dir}/jsp/common" filtering="true">
              <fileset dir="${jsp.dir}/common">
                <patternset>
                  <include name="common_bottom_border.jsp"/>
                </patternset>
              </fileset>
     </copy> 
     
      <filter token="user.password" value="${stage.user.password}"/>
      <copy todir="${jboss.home}/server/default/deploy" filtering="true">
               <fileset dir="${config.stage}/connections">
     	      <patternset>
     	         <include name="oracle-ds.xml"/>
     	      </patternset>
               </fileset>
     </copy>     
     
       <property name="debug.config.home" value="${config.stage}" /> 
        
   </target>
  <!-- =========== END STAGE CONFIG ======================= -->
  
  
  <!-- =========== PRODUCTION CONFIG ======================= -->
    <target name="prod_config" depends="init">          
     <copy todir="${classes.build.dir}/WEB-INF/classes">
         <fileset dir="${config.prod}/properties">
           <patternset>
             <include name="*.properties"/>
           </patternset>
         </fileset>
       </copy>
         
     <filter token="umlmodelbrowser.version" value="${umlmodelbrowser.version}"/>
     <filter token="umlmodelbrowser.build" value="${umlmodelbrowser.build}" />
     <copy todir="${classes.build.dir}/jsp/common" filtering="true">
              <fileset dir="${jsp.dir}/common">
                <patternset>
                  <include name="common_bottom_border.jsp"/>
                </patternset>
              </fileset>
     </copy> 
     
     <filter token="user.password" value="${prod.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" filtering="true">
          <fileset dir="${config.prod}/connections">
	      <patternset>
	         <include name="oracle-ds.xml"/>
	      </patternset>
          </fileset>
     </copy>          
     
       <property name="debug.config.home" value="${config.prod}" /> 
        
   </target>
  <!-- =========== END STAGE CONFIG ======================= -->
  <target name="debug_setting" depends="debug_copy,debug_remove">
 
  </target>
  <target name="debug_copy" if="set_debug">
    
     <copy todir="${classes.build.dir}/WEB-INF/classes">
                  <fileset dir="${debug.config.home}/properties">
                    <patternset>
                      <include name="umlmodelbrowser.properties"/>
                    </patternset>
                  </fileset>
       </copy>  
  </target>
  
  <target name="debug_remove" unless="set_debug" >
     <delete quiet="true" failonerror="false">
                  <fileset dir="${classes.build.dir}/WEB-INF/classes/properties" includes = "umlmodelbrowser.properties">
                  </fileset>
       </delete>  
  </target>

  

  

  <!-- =========== START WAR PROCESS ======================= -->
  
   <target name="war_umlmodelbrowser" depends="compile">  

     <copy todir="${classes.build.dir}/WEB-INF/classes">      
         <fileset dir="${java.src.dir}">
           <patternset>
             <include name="gov/nih/nci/ncicb/cadsr/umlmodelbrowser/struts/common/*.properties"/>
           </patternset>
         </fileset>      
      </copy> 
      
      <!-- copy application classes -->
      <copy todir="${classes.build.dir}/WEB-INF/classes">
        <fileset dir="${classes.build.dir}">
           <patternset>
              <include name="**/*.*"/> 
           </patternset>
       </fileset>       
     </copy>
    
    <war warfile="${build.dir}/${war.name}.war" webxml="${web.descriptor.home}/web.xml">
       
      <fileset dir="${config.home}">
        <patternset>
          <include name="WEB-INF/*.tld"/>
          <include name="WEB-INF/*.xml"/>
          <include name="WEB-INF/jboss-web.xml"/>
          <include name="WEB-INF/umlbrowser/struts-config*.xml"/>
          <include name="WEB-INF/spring/*.xml"/>

        </patternset>
      </fileset>
      <fileset dir="${classes.build.dir}">
        <patternset>
          <include name="WEB-INF/classes/**/*.*"/>
        </patternset>
      </fileset>        


      <fileset dir="${jsp.dir}/">
              <patternset>
                <include name="common/**/*.*"/>  
                <include name="*.jsp"/>
                <include name="umlbrowser/*.*"/>  
                <exclude name="common_bottom_border.jsp"/>                
              </patternset>
      </fileset>

      <fileset dir="${classes.build.dir}/jsp/">
              <patternset>
                <include name="common/**/*.*"/>                 
              </patternset>
      </fileset>
      
           
      <fileset dir="${html.dir}/">
        <patternset>
          <include name="common/**/*.*"/>   
        </patternset>         
      </fileset>

      <fileset dir="${ui.dir}/">
        <patternset>
          <include name="i/**/*.*"/>   
        </patternset>
      </fileset>

      <fileset dir="${ui.dir}/">
        <patternset>
          <include name="jsLib/**/*.*"/>   
          <include name="css/**/*.*"/>   
        </patternset>      
      </fileset>

      <lib dir="${run.java.lib.dir}">
      	<include name="*.jar"/>       	
      	<include name="*.zip"/>      
      </lib>
       
    </war>
  </target>
   
  <!-- =========== END CREATE WAR FILE ======================= -->


 <!-- =========== Deployment targets below ======================= -->
     
   <target name="jboss_stop">
           <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                           <arg value="/C"/>
                           <arg value="start"/>
                           <arg value="${jboss.home}/bin/${jboss.stop.script.name} -S"/>
           </exec>
  </target>
  
  <target name="jboss_startdebug">
               <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                               <arg value="/C"/>
                               <arg value="start"/>
                               <arg value="${jboss.home}/bin/${jboss.start.debug.script.name}"/>
               </exec>
  </target>
  
  <target name="jboss_start">
             <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                             <arg value="/C"/>
                             <arg value="start"/>
                             <arg value="${jboss.home}/bin/${jboss.start.script.name}"/>
             </exec>
  </target>
  
   <target  name="clean_jboss" depends="init" >       
	<delete dir="${jboss.home}/server/default/tmp/deploy" failonerror="true"  verbose="true" />
	<delete file="${jboss.home}/server/default/deploy/${war.name}.war" failonerror="true" verbose="true" />
        <delete dir="${jboss.home}/server/default/work/jboss.web" failonerror="true" verbose="true" />
  </target>    
   
   <target  name="deploy_dev" depends="clean,clean_jboss,debug_setting,dev_config,war_umlmodelbrowser"> 
     <copy todir="${jboss.home}/server/default/lib">
           <fileset dir="${compile.java.lib.dir}">
              <include name="ojdbc14.jar" />
           </fileset>
     </copy>
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${war.name}.war"/>
           </patternset>
         </fileset> 
     </copy>
     <filter token="user.password" value="${dev.user.password}"/>
   </target> 
   
   <target  name="deploy_dev_start" depends="deploy_dev,jboss_startdebug"> 
   </target> 
   
  
   <target  name="deploy_qa" depends="clean,clean_jboss,debug_setting,qa_config,war_umlmodelbrowser"> 
     <copy todir="${jboss.home}/server/default/lib">
           <fileset dir="${compile.java.lib.dir}">
              <include name="ojdbc14.jar" />
           </fileset>
     </copy>
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${war.name}.war"/>
           </patternset>
         </fileset> 
     </copy>  
     <filter token="user.password" value="${qa.user.password}"/>
   </target> 
   
      <target  name="deploy_qa_start" depends="deploy_qa,jboss_startdebug"> 
      </target>

   <target  name="deploy_stage" depends="clean,clean_jboss,debug_setting,stage_config,war_umlmodelbrowser"> 
     <copy todir="${jboss.home}/server/default/lib">
        <fileset dir="${compile.java.lib.dir}">
           <include name="ojdbc14.jar" />
        </fileset>
     </copy>   
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${war.name}.war"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${stage.user.password}"/>
   </target> 
   
      <target  name="deploy_stage_start" depends="deploy_stage,jboss_startdebug"> 
   </target>
   
   <target  name="deploy_prod" depends="clean,clean_jboss,debug_setting,prod_config, war_umlmodelbrowser"> 
     <copy todir="${jboss.home}/server/default/lib">
        <fileset dir="${compile.java.lib.dir}">
           <include name="ojdbc14.jar" />
        </fileset>
     </copy>   
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${war.name}.war"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${prod.user.password}"/>
   </target> 
   
      <target  name="deploy_prod_start" depends="deploy_prod,jboss_startdebug"> 
   </target>   
<!-- =========== End Deployment targets  ======================= -->



<!-- =========== Copy DISTRIBUTION war============== -->
  <target name="dist_war_copy" depends="war_umlmodelbrowser">  
     <copy todir="${dist.dir}">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${war.name}.war"/>
           </patternset>
         </fileset>    
      </copy>          
   </target>   
  <!-- =========== DEV DISTRIBUTION============== -->
  
  <!-- =========== DEV DISTRIBUTION============== -->
   <target name="dist_dev" depends="clean_build_dir,debug_setting,dev_config,war_umlmodelbrowser,dist_war_copy">      
   </target>      
  <!-- =========== END DEV DISTRIBUTION ======================= -->
  
  <!-- =========== QA DISTRIBUTION============== -->
        <target name="dist_qa" depends="clean_build_dir,debug_setting,qa_config,war_umlmodelbrowser,dist_war_copy">  
        </target>      
  <!-- =========== END TEST DISTRIBUTION ======================= -->
  
  <!-- =========== STAGE DISTRIBUTION============== -->
       <target name="dist_stage" depends="clean_build_dir,debug_setting,stage_config,war_umlmodelbrowser,dist_war_copy">  
        </target>      
  <!-- =========== END STAGE DISTRIBUTION ======================= -->
  
  <!-- =========== PROD DISTRIBUTION============== -->
        <target name="dist_prod" depends="clean_build_dir,debug_setting,prod_config,war_umlmodelbrowser,dist_war_copy">  
        </target>      
  <!-- =========== END PROD DISTRIBUTION ======================= -->
  
  <!-- =========== PROD DISTRIBUTION Complete============== -->
  
  
 <!-- ===========  OPEN SOURCE ======================= -->
<target name="opensource_init" depends="clean,init">
     <mkdir dir="${open.source.dir}"/>
     <mkdir dir="${open.source.dir.raw}"/>
     <mkdir dir="${open.source.dir.raw.config}"/>
     <mkdir dir="${open.source.dir.raw.lib}"/>
     <mkdir dir="${open.source.dir.raw.src}"/>
     <mkdir dir="${open.source.dir.raw.ui}"/>
     <mkdir dir="${build.docs.setup.dir}"/>

     
     <!-- Copy doc to build dir -->
     <filter token="cdebrowser.version" value="${cdebrowser.version}"/>
     <filter token="umlmodelbrowser.version" value="${umlmodelbrowser.version}"/>
     <filter token="umlmodelbrowser.version.suffix" value="${umlmodelbrowser.version.suffix}"/>
     <copy todir="${build.docs.setup.dir}/" filtering="true">      
         <fileset dir="${umlbrowser.docs.setup.dir}">
           <patternset>
             <include name="${app.docs.setup.distribution.src.readme.name}.txt"/>
             <include name="${open.source.readme.name}.txt"/>
           </patternset>
         </fileset>               
      </copy>
      
     
     <!-- copy ui -->  
     
     <copy todir="${open.source.dir.raw.ui}/">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="**/*.*"/>
             <exclude name="**/images/*.*"/>
             <exclude name="**/i/*.*"/>
           </patternset>
         </fileset>               
      </copy> 
      
     <!-- copy src -->
     <copy todir="${open.source.dir.raw.src}">      
         <fileset dir="${java.src.dir}">
           <patternset>
             <include name="**/*.xml"/>
             <exclude name="*build.xml"/>
             <include name="**/*.properties"/>
             <include name="**/*.java"/>
           </patternset>
         </fileset>            
      </copy>    
    <!-- copy config -->
    
     <!-- copy build file -->
     
     <copy todir="${open.source.dir.raw}">      
         <fileset dir="${config.opensource}/scripts">
           <patternset>
             <include name="build.xml"/>
           </patternset>
         </fileset>            
      </copy>    
    <!-- copy config -->
    
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="META-INF/*.*"/>
           </patternset>
         </fileset>               
      </copy>  
     <copy todir="${open.source.dir.raw.config}/WEB-INF">      
         <fileset dir="${config.home}/WEB-INF">
           <patternset>
             <include name="**/*.xml"/>
             <include name="*.*"/>
           </patternset>
         </fileset>               
      </copy>       
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.opensource}">
           <patternset>
             <include name="properties/*.*"/>
           </patternset>
         </fileset>               
      </copy> 
     
   </target>

 <target name="opensource_to_accii" depends="opensource_init">
  <native2ascii src="${open.source.dir.raw}" dest="${open.source.dir}/ascii/${open.source.dir.base.name}/"
      includes="**/*.*" />        
 </target>
  
  <target name="opensource_unit" depends="opensource_to_accii">
      <!-- copy libs -->
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/lib/java">      
         <fileset dir="${run.java.lib.dir}">
           <patternset>
             <include name="**/*.*"/>
           </patternset>
         </fileset> 
         <fileset dir="${compile.java.lib.dir}">
           <patternset>
             <include name="**/*.*"/>
           </patternset>
         </fileset>                        
      </copy>       
     <!-- copy images -->
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/ui">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="i/*.*"/>
           </patternset>
         </fileset>               
      </copy>  
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/ui">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="html/common/skins/umlbrowser/images/*.*"/>
           </patternset>
         </fileset>               
      </copy> 
      
      <native2ascii src="${build.docs.setup.dir}" 
                    dest="${open.source.dir}/ascii/${open.source.dir.base.name}"
               includes="${open.source.readme.name}.txt"               
               />        
  </target>
  
  <target name="opensource_windows" depends="opensource_unit">
   <zip destfile="${dist.dir}/${open.source.file.name.windows}.zip"
       basedir="${open.source.dir}/ascii"
       update="true" />
 </target>

  
  <target name="opensource_unix" depends="opensource_unit">
    <tar tarfile="${build.dir}/${open.source.file.name.unix}.tar"
        basedir="${open.source.dir}/ascii"
        longfile="gnu"/>
   <gzip zipfile="${dist.dir}/${open.source.file.name.unix}.tar.gz" 
      src="${build.dir}/${open.source.file.name.unix}.tar"
       />
 </target> 
 
 <target name="dist_opensource" depends="opensource_windows,
          opensource_unix">  
         <native2ascii src="${build.docs.setup.dir}" dest="${dist.dir}"
         includes="${app.docs.setup.distribution.src.readme.name}.txt"               
         />        
  </target>      
  <!-- =========== END PROD DISTRIBUTION ======================= --> 


 <!-- =========== BUILD HELPERS ======================= -->
   <target name="help" depends="init">
     <echo>
 
       ===================================================================
       umlmodelbrowser Build System - Help
       ===================================================================
 
       Targets:
 
       clean                  -Cleans the build area.


       
       dist_dev		   -Creates Developement Clean distribution.
       dist_qa		      -Creates QA Clean distribution.
       dist_stage	      -Creates Stage Clean distribution.
       dist_prod	      -Creates Prod Clean distribution.
       

       deploy_dev_start       -Deploy to dev and Start JBOSS
       deploy_qa_start	      -Deploy to QA and Start JBOSS
       deploy_stage_start     -Deploy to Stage and Start JBOSS
       deploy_prod_start      -Deploy to Prod and Start JBOSS
       

       jboss_startdebug       - Start JBOSS in debug mod
       help                   - This help screen.
 
       Settings:
           Project Home:    ${project.home}
 
       ===================================================================
 
     </echo>
   </target>
   <!-- end help -->  
</project>